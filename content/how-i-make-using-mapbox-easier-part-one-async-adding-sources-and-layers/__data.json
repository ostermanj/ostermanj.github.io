{"type":"data","nodes":[{"data":null},{"data":{"authors":[{"metadata":{"tags":[]},"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"3qr5d6sj491p"}},"id":"6rhv4yMoAF3cN8jyYqZSWu","type":"Entry","createdAt":"2022-06-17T16:18:02.488Z","updatedAt":"2022-06-25T01:07:29.101Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"author"}},"locale":"en-US"},"fields":{"fullName":"John Osterman","website":"https://osterman.io/","twitterAccount":"https://twitter.com/JohnAOsterman","linkedinAccount":"https://www.linkedin.com/in/john-osterman-32714012/","photo":{"metadata":{"tags":[]},"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"3qr5d6sj491p"}},"id":"6E2Gh0TS2hrqafgOY1NlHr","type":"Asset","createdAt":"2022-06-25T01:06:08.949Z","updatedAt":"2022-06-25T01:06:08.949Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"locale":"en-US"},"fields":{"title":"john osterman photo","description":"","file":{"url":"//images.ctfassets.net/3qr5d6sj491p/6E2Gh0TS2hrqafgOY1NlHr/68804563485dfdb3f0cb50fb38e3e3fa/osterman-photo.jpg","details":{"size":256400,"image":{"width":750,"height":847}},"fileName":"osterman-photo.jpg","contentType":"image/jpeg"}}}}}],"title":"How I make using Mapbox easier, part one: async adding sources and layers","datePublished":"2020-12-29","body":"<p><span class=\"first-letter\">M</span>apbox (specifically, for me, <a href=\"https://docs.mapbox.com/mapbox-gl-js/api/\">Mapbox GL JS</a>) is a great platform for visualizing geographic data. I like that their documentation is thorough (though not always easy to digest). I like that they seem to have invested a lot of effort into making it a useful dataviz tool, in addition to all its other uses: navigation, geocoding, augmented vision. I like that they’re headquartered here in DC. And I like that their pricing plans have a meaningful and useful free tier.</p>\n<p>Awesome.</p>\n<p>Over the three or four years I’ve been using it, though, I have come up against the same challenges. One is the difficulty of its expressions syntax for data-driven styling or interpolated values, which I have to look up every time. Another is accessing the full data behind map features that may not be fully rendered. Another—the topic of this post—is how to work with the async nature of adding sources and layers to a map.</p>\n<p><picture><source srcset=\"//images.ctfassets.net/3qr5d6sj491p/3KfGz5kmTI4dkz0l98oHY3/777fd2648aaab56363a79c818dc3d1c2/mapbox.png?fm=avif&w=1480&h=1045&q=30 2x, //images.ctfassets.net/3qr5d6sj491p/3KfGz5kmTI4dkz0l98oHY3/777fd2648aaab56363a79c818dc3d1c2/mapbox.png?fm=avif&w=740&h=523&q=30 1x\" type=\"image/avif\" media=\"(min-width:632px)\">\n                      <source srcset=\"//images.ctfassets.net/3qr5d6sj491p/3KfGz5kmTI4dkz0l98oHY3/777fd2648aaab56363a79c818dc3d1c2/mapbox.png?fm=avif&w=800&h=565&q=30 2x, //images.ctfassets.net/3qr5d6sj491p/3KfGz5kmTI4dkz0l98oHY3/777fd2648aaab56363a79c818dc3d1c2/mapbox.png?fm=avif&w=400&h=282&q=30 1x\" type=\"image/avif\"><source srcset=\"//images.ctfassets.net/3qr5d6sj491p/3KfGz5kmTI4dkz0l98oHY3/777fd2648aaab56363a79c818dc3d1c2/mapbox.png?fm=webp&w=1480&h=1045&q=30 2x, //images.ctfassets.net/3qr5d6sj491p/3KfGz5kmTI4dkz0l98oHY3/777fd2648aaab56363a79c818dc3d1c2/mapbox.png?fm=webp&w=740&h=523&q=30 1x\" type=\"image/webp\" media=\"(min-width:632px)\">\n                      <source srcset=\"//images.ctfassets.net/3qr5d6sj491p/3KfGz5kmTI4dkz0l98oHY3/777fd2648aaab56363a79c818dc3d1c2/mapbox.png?fm=webp&w=800&h=565&q=30 2x, //images.ctfassets.net/3qr5d6sj491p/3KfGz5kmTI4dkz0l98oHY3/777fd2648aaab56363a79c818dc3d1c2/mapbox.png?fm=webp&w=400&h=282&q=30 1x\" type=\"image/webp\"><img src=\"//images.ctfassets.net/3qr5d6sj491p/3KfGz5kmTI4dkz0l98oHY3/777fd2648aaab56363a79c818dc3d1c2/mapbox.png alt=\"a mapbox view of San Diego with red, orange, and purple extruded recangles representing buildings on a dark background\" width=\"1014px\" height=\"716px\" /></picture></p>\n<p>Adding sources and layers to a Mapbox map is pretty straightforward. The source is the data, and the layer is a visualization of the data. You can have multiple layers based on the same data. To <a href=\"https://docs.mapbox.com/mapbox-gl-js/api/sources/\">add a source</a>, you use the <code>addSource()</code> method of the Map instance. It takes an <code>id</code> string and a config object as parameters. The underlying data can be geoJSON, or a vector source already uploaded to Mapbox, or others like raster images or video. To <a href=\"https://docs.mapbox.com/mapbox-gl-js/api/map/#map#addlayer\">add a layer</a>, you use the <code>addLayer()</code> method, which takes a config object and, optionally, the name of another layer to insert the new layer before.</p>\n<p>The trouble is your code may quite easily call the <code>addLayer()</code> method\nbefore <code>addSource()</code> really takes effect. Both methods are quietly asynchronous, handled by Mapbox outside the written sequence of your code. Mapbox could, perhaps should, make those methods explicitly async or, in other words, make them Promises that resolve only after they have taken full effect. In fact, in this <a href=\"https://github.com/mapbox/mapbox-gl-js/issues/10192\">Github issue</a>, it looks like that may be in the works.</p>\n<p>In the meantime, it simply takes time for <code>addSource()</code> and <code>addLayer()</code> to take effect, which means you have to ensure the map layers are ready before you try to do anything with them. My solution has been to wrap the native methods in my own Promises that test whether the layers are rendered before resolving. This way, I can add a source, add some layers, and then chain my next actions via <code>then()</code>.</p>\n<p>That solution is available as a small npm package, <a href=\"https://www.npmjs.com/package/mapbox-helper\">mapbox-helper</a>. Give it a try. More info about how it works and how to use it is available there. The short version is this: the native <code>addSource()</code> and <code>addLayer()</code> methods are combined into one, <code>addSourceAndLayers()</code>, in which you specify the source you want to add and one or more layers that are based on it. Internally, adding the layers only occurs after the source is ready. The method returns a Promise to your code that resolves only after all layers have been rendered or, if a layer’s visibility property is set to ‘none’, is ready to be rendered.</p>\n<p>For example:</p>\n<p><a href=\"https://gist.github.com/ostermanj/c8302e49e9b83b83a05bd2e964d92fba\" class=\"embedly-card\" data-card-width=\"100%\" data-card-controls=\"0\">Embedded content: https://gist.github.com/ostermanj/c8302e49e9b83b83a05bd2e964d92fba</a></p>\n<p>Thanks for reading. And, by the way, if you haven’t checked out Mapbox’s <a href=\"https://www.mapbox.com/blog/mapbox-gl-js-v2-3d-maps-camera-api-sky-api-launch\">version 2 release yet</a>, you should. It has really great 3D rendering of elevation data and super hi-res satellite imagery, among other performance improvements.</p>\n","snippet":"Use a small npm package to work with the async nature of adding sources and layers to a Mapbox map.","tags":[{"metadata":{"tags":[]},"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"3qr5d6sj491p"}},"id":"5tPE4sus2igTIK2zIdqyBz","type":"Entry","createdAt":"2022-08-14T20:57:53.919Z","updatedAt":"2022-08-14T20:57:53.919Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"tag":"mapbox"}},{"metadata":{"tags":[]},"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"3qr5d6sj491p"}},"id":"3AIjGHsEBIU2L5LSAhDYZG","type":"Entry","createdAt":"2022-07-25T18:21:18.957Z","updatedAt":"2022-07-25T18:21:18.957Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"tag"}},"locale":"en-US"},"fields":{"tag":"dataviz"}}],"heroImage":{"metadata":{"tags":[]},"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"3qr5d6sj491p"}},"id":"3KfGz5kmTI4dkz0l98oHY3","type":"Asset","createdAt":"2022-08-14T21:09:00.907Z","updatedAt":"2022-08-14T21:09:00.907Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"locale":"en-US"},"fields":{"title":"mapbox async layers","description":"","file":{"url":"//images.ctfassets.net/3qr5d6sj491p/3KfGz5kmTI4dkz0l98oHY3/777fd2648aaab56363a79c818dc3d1c2/mapbox.png","details":{"size":774983,"image":{"width":1014,"height":716}},"fileName":"mapbox.png","contentType":"image/png"}}},"contentType":"blogPost"}}]}